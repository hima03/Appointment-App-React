{"version":3,"sources":["components/AddAppointments.js","components/SearchAppointments.js","components/ListAppointments.js","components/App.js","serviceWorker.js","index.js"],"names":["AddAppointments","state","petName","ownerName","aptDate","aptTime","aptNotes","handleChange","bind","handleAdd","e","preventDefault","tempApt","this","props","addAppointment","setState","toggleForm","target","value","name","className","formDisplay","onClick","id","noValidate","onSubmit","htmlFor","readOnly","type","placeholder","onChange","rows","cols","Component","SearchAppointments","aria-label","searchApts","data-toggle","aria-haspopup","aria-expanded","orderBy","changeOrder","orderDir","href","role","ListAppointments","appointments","map","item","deleteAppointment","contentEditable","suppressContentEditableWarning","onBlur","updateInfo","innerText","aptId","date","parse","format","App","myAppointments","queryText","lastIndex","query","order","dir","tempApts","findIndex","apt","unshift","without","fetch","then","response","json","result","apts","filteredApts","sort","a","b","toLowerCase","filter","eachItem","includes","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.151a1a19.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\n\r\nclass AddAppointments extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      petName: \"\",\r\n      ownerName: \"\",\r\n      aptDate: \"\",\r\n      aptTime: \"\",\r\n      aptNotes: \"\"\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleAdd = this.handleAdd.bind(this);\r\n  }\r\n\r\n  handleAdd(e) {\r\n    e.preventDefault();\r\n    let tempApt = {\r\n      petName: this.state.petName,\r\n      ownerName: this.state.ownerName,\r\n      aptDate: this.state.aptDate + \" \" + this.state.aptTime,\r\n      aptNotes: this.state.aptNotes\r\n    };\r\n\r\n    this.props.addAppointment(tempApt);\r\n\r\n    this.setState({\r\n      petName: \"\",\r\n      ownerName: \"\",\r\n      aptDate: \"\",\r\n      aptTime: \"\",\r\n      aptNotes: \"\"\r\n    });\r\n    this.props.toggleForm();\r\n  }\r\n\r\n  handleChange(e) {\r\n    const target = e.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          \"card textcenter mt-3 \" +\r\n          (this.props.formDisplay ? \"\" : \"add-appointment\")\r\n        }\r\n      >\r\n        <div\r\n          className=\"apt-addheading card-header bg-primary text-white\"\r\n          onClick={this.props.toggleForm}\r\n        >\r\n          <FaPlus /> Add Appointment\r\n        </div>\r\n\r\n        <div className=\"card-body\">\r\n          <form id=\"aptForm\" noValidate onSubmit={this.handleAdd}>\r\n            <div className=\"form-group form-row\">\r\n              <label\r\n                className=\"col-md-2 col-form-label text-md-right\"\r\n                htmlFor=\"petName\"\r\n                readOnly\r\n              >\r\n                Pet Name\r\n              </label>\r\n              <div className=\"col-md-10\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"petName\"\r\n                  placeholder=\"Pet's Name\"\r\n                  value={this.state.petName}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n              <label\r\n                className=\"col-md-2 col-form-label text-md-right\"\r\n                htmlFor=\"ownerName\"\r\n              >\r\n                Pet Owner\r\n              </label>\r\n              <div className=\"col-md-10\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"ownerName\"\r\n                  placeholder=\"Owner's Name\"\r\n                  value={this.state.ownerName}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n              <label\r\n                className=\"col-md-2 col-form-label text-md-right\"\r\n                htmlFor=\"aptDate\"\r\n              >\r\n                Date\r\n              </label>\r\n              <div className=\"col-md-4\">\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control\"\r\n                  name=\"aptDate\"\r\n                  id=\"aptDate\"\r\n                  value={this.state.aptDate}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <label\r\n                className=\"col-md-2 col-form-label text-md-right\"\r\n                htmlFor=\"aptTime\"\r\n              >\r\n                Time\r\n              </label>\r\n              <div className=\"col-md-4\">\r\n                <input\r\n                  type=\"time\"\r\n                  className=\"form-control\"\r\n                  name=\"aptTime\"\r\n                  id=\"aptTime\"\r\n                  value={this.state.aptTime}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n              <label className=\"col-md-2 text-md-right\" htmlFor=\"aptNotes\">\r\n                Apt. Notes\r\n              </label>\r\n              <div className=\"col-md-10\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  rows=\"4\"\r\n                  cols=\"50\"\r\n                  name=\"aptNotes\"\r\n                  id=\"aptNotes\"\r\n                  placeholder=\"Appointment Notes\"\r\n                  value={this.state.aptNotes}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row mb-0\">\r\n              <div className=\"offset-md-2 col-md-10\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary d-block ml-auto\"\r\n                >\r\n                  Add Appointment\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddAppointments;\r\n","import React, { Component } from \"react\";\r\n\r\nclass SearchAppointments extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"search-appointments row justify-content-center my-4\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"input-group\">\r\n            <input\r\n              id=\"SearchApts\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              aria-label=\"Search Appointments\"\r\n              onChange={(e) => this.props.searchApts(e.target.value)}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary dropdown-toggle\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                Sort by: <span className=\"caret\" />\r\n              </button>\r\n\r\n              <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                <button\r\n                  className={\r\n                    \"sort-by dropdown-item \" +\r\n                    (this.props.orderBy === \"petName\" ? \"active\" : \"\")\r\n                  }\r\n                  onClick={(e) =>\r\n                    this.props.changeOrder(\"petName\", this.props.orderDir)\r\n                  }\r\n                  href=\"#\"\r\n                >\r\n                  Pet Name\r\n                </button>\r\n                <button\r\n                  className={\r\n                    \"sort-by dropdown-item \" +\r\n                    (this.props.orderBy === \"aptDate\" ? \"active\" : \"\")\r\n                  }\r\n                  onClick={(e) =>\r\n                    this.props.changeOrder(\"aptDate\", this.props.orderDir)\r\n                  }\r\n                  href=\"#\"\r\n                >\r\n                  Date\r\n                </button>\r\n                <button\r\n                  className={\r\n                    \"sort-by dropdown-item \" +\r\n                    (this.props.orderBy === \"ownerName\" ? \"active\" : \"\")\r\n                  }\r\n                  onClick={(e) =>\r\n                    this.props.changeOrder(\"ownerName\", this.props.orderDir)\r\n                  }\r\n                  href=\"#\"\r\n                >\r\n                  Owner\r\n                </button>\r\n                <div role=\"separator\" className=\"dropdown-divider\" />\r\n                <button\r\n                  className={\r\n                    \"sort-by dropdown-item \" +\r\n                    (this.props.orderDir === \"asc\" ? \"active\" : \"\")\r\n                  }\r\n                  onClick={(e) =>\r\n                    this.props.changeOrder(this.props.orderBy, \"asc\")\r\n                  }\r\n                  href=\"#\"\r\n                >\r\n                  Asc\r\n                </button>\r\n                <button\r\n                  className={\r\n                    \"sort-by dropdown-item \" +\r\n                    (this.props.orderDir === \"desc\" ? \"active\" : \"\")\r\n                  }\r\n                  onClick={(e) =>\r\n                    this.props.changeOrder(this.props.orderBy, \"desc\")\r\n                  }\r\n                  href=\"#\"\r\n                >\r\n                  Desc\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchAppointments;\r\n","import React, { Component } from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport Moment from \"react-moment\";\r\n\r\nclass ListAppointments extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"appointment-list item-list mb-3\">\r\n        {this.props.appointments.map((item) => (\r\n          <div className=\"pet-item col media py-3\" key={item.aptId}>\r\n            <div className=\"mr-3\">\r\n              <button\r\n                className=\"pet-delete btn btn-sm btn-danger\"\r\n                onClick={() => this.props.deleteAppointment(item)}\r\n              >\r\n                <FaTimes />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"pet-info media-body\">\r\n              <div className=\"pet-head d-flex\">\r\n                <span\r\n                  className=\"pet-name\"\r\n                  contentEditable\r\n                  suppressContentEditableWarning\r\n                  onBlur={(e) =>\r\n                    this.props.updateInfo(\r\n                      \"petName\",\r\n                      e.target.innerText,\r\n                      item.aptId\r\n                    )\r\n                  }\r\n                >\r\n                  {item.aptId}--{item.petName}\r\n                </span>\r\n                <span className=\"apt-date ml-auto\">\r\n                  <Moment\r\n                    date={item.aptDate}\r\n                    parse=\"YYYY-MM-dd hh:mm\"\r\n                    format=\"MMM-d h:mma\"\r\n                  />\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"owner-name\">\r\n                <span className=\"label-item\">Owner: </span>\r\n                <span\r\n                  contentEditable\r\n                  suppressContentEditableWarning\r\n                  onBlur={(e) =>\r\n                    this.props.updateInfo(\r\n                      \"ownerName\",\r\n                      e.target.innerText,\r\n                      item.aptId\r\n                    )\r\n                  }\r\n                >\r\n                  {item.ownerName}\r\n                </span>\r\n              </div>\r\n              <div\r\n                className=\"apt-notes\"\r\n                contentEditable\r\n                suppressContentEditableWarning\r\n                onBlur={(e) =>\r\n                  this.props.updateInfo(\r\n                    \"aptNotes\",\r\n                    e.target.innerText,\r\n                    item.aptId\r\n                  )\r\n                }\r\n              >\r\n                {item.aptNotes}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListAppointments;\r\n","import React, { Component } from \"react\";\nimport \"../css/App.css\";\n\nimport AddAppointments from \"./AddAppointments\";\nimport SearchAppointments from \"./SearchAppointments\";\nimport ListAppointments from \"./ListAppointments\";\n\nimport { findIndex, without } from \"lodash\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      myAppointments: [],\n      formDisplay: false,\n      orderBy: \"petName\",\n      orderDir: \"asc\",\n      queryText: \"\",\n      lastIndex: 0\n    };\n    this.deleteAppointment = this.deleteAppointment.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.addAppointment = this.addAppointment.bind(this);\n    this.changeOrder = this.changeOrder.bind(this);\n    this.searchApts = this.searchApts.bind(this);\n    this.updateInfo = this.updateInfo.bind(this);\n  }\n\n  toggleForm() {\n    this.setState({\n      formDisplay: !this.state.formDisplay\n    });\n  }\n\n  searchApts(query) {\n    this.setState({ queryText: query });\n  }\n\n  changeOrder(order, dir) {\n    this.setState({\n      orderBy: order,\n      orderDir: dir\n    });\n  }\n\n  updateInfo(name, value, id) {\n    let tempApts = this.state.myAppointments;\n    let aptIndex = findIndex(this.state.myAppointments, {\n      aptId: id\n    });\n    tempApts[aptIndex][name] = value;\n    this.setState({\n      myAppointments: tempApts\n    });\n  }\n\n  addAppointment(apt) {\n    let tempApts = this.state.myAppointments;\n    apt.aptId = this.state.lastIndex;\n    tempApts.unshift(apt);\n    this.setState({\n      myAppointments: tempApts,\n      lastIndex: this.state.lastIndex + 1\n    });\n  }\n\n  deleteAppointment(apt) {\n    let tempApts = this.state.myAppointments;\n    tempApts = without(tempApts, apt);\n\n    this.setState({\n      myAppointments: tempApts\n    });\n  }\n\n  componentDidMount() {\n    fetch(\"./data.json\")\n      .then((response) => response.json())\n      .then((result) => {\n        const apts = result.map((item) => {\n          item.aptId = this.state.lastIndex;\n          this.setState({ lastIndex: this.state.lastIndex + 1 });\n          return item;\n        });\n        this.setState({\n          myAppointments: apts\n        });\n      });\n  }\n\n  render() {\n    let order;\n    let filteredApts = this.state.myAppointments;\n    if (this.state.orderDir === \"asc\") {\n      order = 1;\n    } else {\n      order = -1;\n    }\n\n    filteredApts = filteredApts\n      .sort((a, b) => {\n        if (\n          a[this.state.orderBy].toLowerCase() <\n          b[this.state.orderBy].toLowerCase()\n        ) {\n          return -1 * order;\n        } else {\n          return 1 * order;\n        }\n      })\n      .filter((eachItem) => {\n        return (\n          eachItem[\"petName\"]\n            .toLowerCase()\n            .includes(this.state.queryText.toLowerCase()) ||\n          eachItem[\"ownerName\"]\n            .toLowerCase()\n            .includes(this.state.queryText.toLowerCase()) ||\n          eachItem[\"aptNotes\"]\n            .toLowerCase()\n            .includes(this.state.queryText.toLowerCase())\n        );\n      });\n\n    return (\n      <main className=\"page bg-white\" id=\"petratings\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12 bg-white\">\n              <div className=\"container\">\n                <AddAppointments\n                  formDisplay={this.state.formDisplay}\n                  toggleForm={this.toggleForm}\n                  addAppointment={this.addAppointment}\n                />\n                <SearchAppointments\n                  orderBy={this.state.orderBy}\n                  orderDir={this.state.orderDir}\n                  changeOrder={this.changeOrder}\n                  searchApts={this.searchApts}\n                />\n                <ListAppointments\n                  appointments={filteredApts}\n                  deleteAppointment={this.deleteAppointment}\n                  updateInfo={this.updateInfo}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === \"[::1]\" ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener(\"load\", () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              \"This web app is being served cache-first by a service \" +\r\n                \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then((registration) => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === \"installed\") {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  \"New content is available and will be used when all \" +\r\n                    \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log(\"Content is cached for offline use.\");\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error during service worker registration:\", error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then((response) => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get(\"content-type\");\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          \"No internet connection found. App is running in offline mode.\"\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if (\"serviceWorker\" in navigator) {\r\n      navigator.serviceWorker.ready.then((registration) => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }\r\n  ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./css/index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"jquery/dist/jquery.js\";\nimport \"popper.js/dist/umd/popper.js\";\nimport \"bootstrap/dist/js/bootstrap.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}